{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\laugh\\\\Desktop\\\\React\\\\NextJS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetailPage = props => {\n  console.log(props.detail);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail //   image={props.detail.image}\n  //   title={props.detail.title}\n  //   address={props.detail.address}\n  //   description={props.detail.description}\n  , {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:to4fr3nflvSSFkfp@cluster0.dugva.mongodb.net/meetup?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetups = await meetupCollections.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const id = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://admin:to4fr3nflvSSFkfp@cluster0.dugva.mongodb.net/meetup?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollections = db.collection(\"meetups\");\n  const meetups = await meetupCollections.findOne({\n    _id: ObjectId(id)\n  });\n  client.close();\n  console.log(meetups);\n  return {\n    props: {\n      detail: {\n        id: meetups._id.toString(),\n        title: meetups.title,\n        image: meetups.image,\n        address: meetups.address,\n        descriptuon: meetups.description\n      }\n    }\n  };\n}\nexport default MeetupDetailPage;","map":{"version":3,"sources":["C:/Users/laugh/Desktop/React/NextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetailPage","props","console","log","detail","getStaticPaths","client","connect","db","meetupCollections","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","id","findOne","title","image","address","descriptuon","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,sBACE,QAAC,YAAD,CACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVD;;AAYA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,oGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,EAAE,GAAGD,OAAO,CAACJ,MAAR,CAAeC,QAA1B;AACA,QAAMf,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,oGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEd,QAAQ,CAAC0B,EAAD;AAAf,GAA1B,CAAtB;AAEAnB,EAAAA,MAAM,CAACS,KAAP;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLG,MAAAA,MAAM,EAAE;AACNqB,QAAAA,EAAE,EAAEd,OAAO,CAACE,GAAR,CAAYS,QAAZ,EADE;AAENK,QAAAA,KAAK,EAAEhB,OAAO,CAACgB,KAFT;AAGNC,QAAAA,KAAK,EAAEjB,OAAO,CAACiB,KAHT;AAINC,QAAAA,OAAO,EAAElB,OAAO,CAACkB,OAJX;AAKNC,QAAAA,WAAW,EAAEnB,OAAO,CAACoB;AALf;AADH;AADF,GAAP;AAWD;AAED,eAAe/B,gBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nconst MeetupDetailPage = (props) => {\r\n  console.log(props.detail);\r\n  return (\r\n    <MeetupDetail\r\n    //   image={props.detail.image}\r\n    //   title={props.detail.title}\r\n    //   address={props.detail.address}\r\n    //   description={props.detail.description}\r\n    ></MeetupDetail>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:to4fr3nflvSSFkfp@cluster0.dugva.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupCollections = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupCollections.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const id = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:to4fr3nflvSSFkfp@cluster0.dugva.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupCollections = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupCollections.findOne({ _id: ObjectId(id) });\r\n\r\n  client.close();\r\n  console.log(meetups);\r\n  return {\r\n    props: {\r\n      detail: {\r\n        id: meetups._id.toString(),\r\n        title: meetups.title,\r\n        image: meetups.image,\r\n        address: meetups.address,\r\n        descriptuon: meetups.description\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}